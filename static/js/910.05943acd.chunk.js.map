{"version":3,"file":"static/js/910.05943acd.chunk.js","mappings":"8PACAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD/B,cAC1BE,EAD0B,yBAGzBA,EAASC,MAHgB,2CAAH,qDAMlBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,kBACVM,EADU,oBACIL,EADJ,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBG,EAAS,mCAAG,WAAMD,GAAN,uFACAN,EAAAA,EAAAA,IAAA,kBACVM,EADU,4BACYL,EADZ,oBADA,cACjBE,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,qD,yGCbhBI,EAAY,kCAgDlB,UA9Ca,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,sGAEIL,GAAW,GAFf,UAG2BN,EAAAA,EAAAA,GAAUS,GAHrC,gBAGYN,EAHZ,EAGYA,KACRS,QAAQC,IAAIV,GACZC,EAAQD,GALZ,kDAOIK,EAASP,GAPb,yBASIK,GAAW,GATf,8EADc,uBAAC,WAAD,wBAadQ,EACD,GAAE,CAACL,IACJG,QAAQC,IAAIV,IAEV,2BACGE,IAAW,wCACF,OAATF,IACC,wBACGA,EAAKY,KAAI,SAAAC,GACR,IAAMC,EAAUD,EAAME,aAAN,yCACsBF,EAAME,cACxC,iKACJ,OACE,2BACE,gBAAKC,IAAKF,EAASG,IAAKJ,EAAMK,KAAMC,MAAM,SAC1C,uBAAIN,EAAMK,QACV,uCAAeL,EAAMO,eAHdP,EAAMjB,GAMlB,MAIJQ,IAAS,yBAAMA,MAGrB,C","sources":["api.js","components/Cast.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = 'ef0fb983e89662afab3575284ace2b44';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieDatails = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n","import { fetchCast } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ERROR_MSG = 'Something went wrong, try again';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        setLoading(true);\n        const { cast } = await fetchCast(movieId);\n        console.log(cast);\n        setCast(cast);\n      } catch (error) {\n        setError(ERROR_MSG);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getCast();\n  }, [movieId]);\n  console.log(cast);\n  return (\n    <div>\n      {loading && <div>Loading...</div>}\n      {cast !== null && (\n        <ul>\n          {cast.map(actor => {\n            const profile = actor.profile_path\n              ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n              : 'https://w7.pngwing.com/pngs/340/956/png-transparent-profile-user-icon-computer-icons-user-profile-head-ico-miscellaneous-black-desktop-wallpaper-thumbnail.png';\n            return (\n              <li key={actor.id}>\n                <img src={profile} alt={actor.name} width=\"150\" />\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n\n      {error && <div>{error}</div>}\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["axios","API_KEY","fetchPopularMovies","response","data","fetchMovieDatails","id","fetchCast","ERROR_MSG","useState","cast","setCast","loading","setLoading","error","setError","movieId","useParams","useEffect","console","log","getCast","map","actor","profile","profile_path","src","alt","name","width","character"],"sourceRoot":""}