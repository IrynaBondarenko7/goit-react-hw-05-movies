{"version":3,"file":"static/js/460.f5d1a811.chunk.js","mappings":"8SACAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD/B,cAC1BE,EAD0B,yBAGzBA,EAASC,MAHgB,2CAAH,qDAMlBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,kBACVM,EADU,oBACIL,EADJ,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBG,EAAS,mCAAG,WAAMD,GAAN,uFACAN,EAAAA,EAAAA,IAAA,kBACVM,EADU,4BACYL,EADZ,oBADA,cACjBE,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTI,EAAY,mCAAG,WAAMF,GAAN,uFACHN,EAAAA,EAAAA,IAAA,kBACVM,EADU,4BACYL,EADZ,2BADG,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAoB,mCAAG,WAAMC,GAAN,uFACXV,EAAAA,EAAAA,IAAA,iCACKC,EADL,kBACsBS,IAFX,cAC5BP,EAD4B,yBAI3BA,EAASC,MAJkB,2CAAH,qD,kKC9BpBO,E,OAAyBC,GAAAA,IAAH,wD,SCK7BC,EAAY,kCAqFlB,EAnFqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAExDC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIX,GAAW,GAFf,UAG0Bb,EAAAA,EAAAA,IAAkBgB,GAH5C,OAGUS,EAHV,OAKId,EAASc,GALb,gDAOIV,EAASP,GAPb,yBASIK,GAAW,GATf,6EADc,uBAAC,WAAD,wBAada,EACD,GAAE,CAACV,IACJ,IAAIW,EAAYC,KAAKC,MAA2B,GAArBnB,EAAMoB,cAEjC,OACE,4BACE,UAAC,KAAD,CAAMC,GAAIX,EAAiBY,QAA3B,WAAqC,SAAC,MAAD,IAArC,UACCpB,IAAW,wCACD,OAAVF,IACC,UAACJ,EAAD,YACE,yBACGI,EAAMuB,eACL,gBACEC,IAAG,yCAAoCxB,EAAMuB,eAC7CE,IAAG,UAAKzB,EAAM0B,OACdC,MAAO,IACPC,OAAQ,OAGV,gBACEJ,IAAG,sGACHC,IAAG,UAAKzB,EAAM0B,OACdC,MAAO,IACPC,OAAQ,SAId,4BACE,wBACG5B,EAAM0B,OACL1B,EAAM6B,gBACN7B,EAAM8B,MACN9B,EAAM+B,iBAEV,yCAAiBd,EAAjB,QACA,qCACA,uBAAIjB,EAAMgC,YACV,oCACA,wBACGhC,EAAMiC,OAAOC,KAAI,SAAAC,GAChB,OAAO,wBAAqBA,EAAOL,MAAnBK,EAAO5C,GACxB,aAKT,mDACA,2BACE,yBACE,SAAC,KAAD,CAAM8B,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAe,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,MAEDjC,IAAS,yBAAMA,MAGrB,C","sources":["api.js","components/MovieDetailsWrap.styled.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst API_KEY = 'ef0fb983e89662afab3575284ace2b44';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(`3/trending/all/day?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieDatails = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const fetchQueryForDetails = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\nexport const StyledMovieDetailsWrap = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { fetchMovieDatails } from 'api';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { StyledMovieDetailsWrap } from 'components/MovieDetailsWrap.styled';\n\nconst ERROR_MSG = 'Something went wrong, try again';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLincLocation = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        setLoading(true);\n        const results = await fetchMovieDatails(movieId);\n\n        setMovie(results);\n      } catch (error) {\n        setError(ERROR_MSG);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovie();\n  }, [movieId]);\n  let userScore = Math.round(movie.vote_average * 10);\n\n  return (\n    <div>\n      <Link to={backLincLocation.current}>{<BsArrowLeft />}Back</Link>\n      {loading && <div>Loading...</div>}\n      {movie !== null && (\n        <StyledMovieDetailsWrap>\n          <div>\n            {movie.backdrop_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\n                alt={`${movie.title}`}\n                width={300}\n                height={400}\n              />\n            ) : (\n              <img\n                src={`https://www.shutterstock.com/image-illustration/retro-movie-art-drawing-simple-260nw-1853540983.jpg`}\n                alt={`${movie.title}`}\n                width={300}\n                height={400}\n              />\n            )}\n          </div>\n          <div>\n            <h2>\n              {movie.title ||\n                movie.original_title ||\n                movie.name ||\n                movie.original_name}\n            </h2>\n            <p>User score : {userScore}%</p>\n            <p>Overview</p>\n            <p>{movie.overview}</p>\n            <p>Generes</p>\n            <ul>\n              {movie.genres.map(genere => {\n                return <li key={genere.id}>{genere.name}</li>;\n              })}\n            </ul>\n          </div>\n        </StyledMovieDetailsWrap>\n      )}\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n      {error && <div>{error}</div>}\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchPopularMovies","response","data","fetchMovieDatails","id","fetchCast","fetchReviews","fetchQueryForDetails","query","StyledMovieDetailsWrap","styled","ERROR_MSG","useState","movie","setMovie","loading","setLoading","error","setError","movieId","useParams","location","useLocation","backLincLocation","useRef","state","from","useEffect","results","getMovie","userScore","Math","round","vote_average","to","current","backdrop_path","src","alt","title","width","height","original_title","name","original_name","overview","genres","map","genere","Suspense","fallback"],"sourceRoot":""}